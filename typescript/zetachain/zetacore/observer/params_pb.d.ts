// @generated by protoc-gen-es v1.3.0 with parameter "target=dts"
// @generated from file zetachain/zetacore/observer/params.proto (package zetachain.zetacore.observer, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message zetachain.zetacore.observer.ChainParamsList
 */
export declare class ChainParamsList extends Message<ChainParamsList> {
  /**
   * @generated from field: repeated zetachain.zetacore.observer.ChainParams chain_params = 1;
   */
  chainParams: ChainParams[];

  constructor(data?: PartialMessage<ChainParamsList>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.observer.ChainParamsList";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChainParamsList;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChainParamsList;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChainParamsList;

  static equals(a: ChainParamsList | PlainMessage<ChainParamsList> | undefined, b: ChainParamsList | PlainMessage<ChainParamsList> | undefined): boolean;
}

/**
 * @generated from message zetachain.zetacore.observer.ChainParams
 */
export declare class ChainParams extends Message<ChainParams> {
  /**
   * @generated from field: int64 chain_id = 11;
   */
  chainId: bigint;

  /**
   * @generated from field: uint64 confirmation_count = 1;
   */
  confirmationCount: bigint;

  /**
   * @generated from field: uint64 gas_price_ticker = 2;
   */
  gasPriceTicker: bigint;

  /**
   * @generated from field: uint64 in_tx_ticker = 3;
   */
  inTxTicker: bigint;

  /**
   * @generated from field: uint64 out_tx_ticker = 4;
   */
  outTxTicker: bigint;

  /**
   * @generated from field: uint64 watch_utxo_ticker = 5;
   */
  watchUtxoTicker: bigint;

  /**
   * @generated from field: string zeta_token_contract_address = 8;
   */
  zetaTokenContractAddress: string;

  /**
   * @generated from field: string connector_contract_address = 9;
   */
  connectorContractAddress: string;

  /**
   * @generated from field: string erc20_custody_contract_address = 10;
   */
  erc20CustodyContractAddress: string;

  /**
   * @generated from field: int64 outbound_tx_schedule_interval = 12;
   */
  outboundTxScheduleInterval: bigint;

  /**
   * @generated from field: int64 outbound_tx_schedule_lookahead = 13;
   */
  outboundTxScheduleLookahead: bigint;

  /**
   * @generated from field: string ballot_threshold = 14;
   */
  ballotThreshold: string;

  /**
   * @generated from field: string min_observer_delegation = 15;
   */
  minObserverDelegation: string;

  /**
   * @generated from field: bool is_supported = 16;
   */
  isSupported: boolean;

  constructor(data?: PartialMessage<ChainParams>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zetachain.zetacore.observer.ChainParams";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ChainParams;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ChainParams;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ChainParams;

  static equals(a: ChainParams | PlainMessage<ChainParams> | undefined, b: ChainParams | PlainMessage<ChainParams> | undefined): boolean;
}

